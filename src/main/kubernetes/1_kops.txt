https://github.com/kubernetes/kops/blob/master/docs/install.md

wget -O kops https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
chmod +x ./kops

export AWS_ACCESS_KEY_ID=$(aws configure get aws_access_key_id)
export AWS_SECRET_ACCESS_KEY=$(aws configure get aws_secret_access_key)

aws s3api create-bucket --bucket piggybanksqueal-test-kops-state --region us-east-1
aws s3api put-bucket-versioning --bucket piggybanksqueal-test-kops-state --versioning-configuration Status=Enabled

export AWS_ACCESS_KEY_ID=$(aws configure get aws_access_key_id)
export AWS_SECRET_ACCESS_KEY=$(aws configure get aws_secret_access_key)
export NAME=piggybank-squeal-test.k8s.local
export KOPS_STATE_STORE=s3://piggybanksqueal-test-kops-state

# k8s 1.10.5

#aws ec2 describe-availability-zones --region us-east-2

kops create cluster --zones us-east-2a --node-count=6 --node-size=t2.large ${NAME} --yes

kops get --name $NAME -o yaml > $NAME.yaml
kops create -f $NAME.yaml
kops create secret --name piggybank-squeal-test.k8s.local sshpublickey admin -i ~/.ssh/id_rsa.pub

#kops edit cluster ${NAME}
kops update cluster ${NAME} --yes

Suggestions:
 * validate cluster: kops validate cluster
 * list nodes: kubectl get nodes --show-labels
 * ssh to the master: ssh -i ~/.ssh/id_rsa admin@api.piggybank-squeal-test.k8s.local
 * the admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.
 * read about installing addons at: https://github.com/kubernetes/kops/blob/master/docs/addons.md.

kops validate cluster

kubectl create -f https://raw.githubusercontent.com/kubernetes/kops/master/addons/kubernetes-dashboard/v1.8.3.yaml
http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/
kops get secrets kube --type secret -oplaintext

# Heapster!
kubectl create -f https://raw.githubusercontent.com/kubernetes/kops/master/addons/monitoring-standalone/v1.7.0.yaml

kops delete cluster --name ${NAME}

kops delete cluster --name ${NAME} --yes
 
